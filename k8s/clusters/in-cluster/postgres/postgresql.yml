---
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  name: in-cluster-main-cluster
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  teamId: in-cluster
  volume:
    size: 50Gi
    storageClass: csi-rbd-sc-retain
  numberOfInstances: 2

  allowedSourceRanges:
    - 172.20.0.0/16
    - 172.21.0.0/16

  enableConnectionPooler: true
  enableMasterPoolerLoadBalancer: true
  connectionPooler:
    numberOfInstances: 2
    mode: transaction

  # users: name -> permissions (usually [])
  users:
    authentik.authentik: []
    argo-workflows.argo-workflows: []
    gatus.gatus: []
    gitlab.gitlab: []
    hedgedoc.hedgedoc: []
    kube-prometheus-stack.grafana: []
    grafana-oncall.grafana-oncall: []
    nextcloud.nextcloud: []
    paperless-ngx.paperless-ngx: []
    petitstream-dev.petitstream-dev: []
    petitstream.petitstream: []
    vaultwarden.vaultwarden: []

  # databases: name -> owner
  databases:
    authentik: authentik.authentik
    argo_workflows: argo-workflows.argo-workflows
    gatus: gatus.gatus
    gitlab: gitlab.gitlab
    grafana: kube-prometheus-stack.grafana
    grafana_oncall: grafana-oncall.grafana-oncall
    hedgedoc: hedgedoc.hedgedoc
    nextcloud: nextcloud.nextcloud
    paperless_ngx: paperless-ngx.paperless-ngx
    petitstream: petitstream.petitstream
    petitstream_dev: petitstream-dev.petitstream-dev
    vaultwarden: vaultwarden.vaultwarden

  postgresql:
    version: "14"

  additionalVolumes:
    - name: pgbackup
      mountPath: /home/postgres/pgbackup
      volumeSource:
        emptyDir: {}

  resources:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: "1"
      memory: 1Gi

  sidecars:
    - name: "exporter"
      image: "prometheuscommunity/postgres-exporter:v0.11.1"
      ports:
        - name: exporter
          containerPort: 9187
          protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256M
        requests:
          cpu: 100m
          memory: 200M
      env:
        - name: CLUSTER_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['cluster-name']
        - name: "DATA_SOURCE_URI"
          value: "$(POD_NAME)/postgres?sslmode=require"
        - name: "DATA_SOURCE_USER"
          value: "$(POSTGRES_USER)"
        - name: "DATA_SOURCE_PASS"
          value: "$(POSTGRES_PASSWORD)"
        - name: "PG_EXPORTER_AUTO_DISCOVER_DATABASES"
          value: "true"
        - name: PG_EXPORTER_CONSTANT_LABELS
          value: 'release=$(CLUSTER_NAME),namespace=$(POD_NAMESPACE)'
