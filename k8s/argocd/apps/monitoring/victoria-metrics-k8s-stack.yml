# yamllint disable rule:line-length
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: victoria-metrics-k8s-stack
  labels:
    app: victoria-metrics-k8s-stack
spec:
  generators:
    - list:
        elements:
          - name: in-cluster
            endpoints:
              - 192.168.0.1
  goTemplate: true
  template:
    metadata:
      name: "{{.name}}-victoria-metrics-k8s-stack"
      labels:
        app: victoria-metrics-k8s-stack
      annotations:
        argocd.argoproj.io/compare-options: ServerSideDiff=true
    spec:
      project: default
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        automated:
          prune: true
          selfHeal: false
      destination:
        name: "{{.name}}"
        namespace: monitoring
      source:
        repoURL: https://victoriametrics.github.io/helm-charts/
        chart: victoria-metrics-k8s-stack
        targetRevision: 0.28.4
        helm:
          releaseName: victoria-metrics-k8s-stack
          values: |
            argocdReleaseOverride: victoria-metrics-k8s-stack
            victoria-metrics-operator:
              enabled: true
              operator:
                disable_prometheus_converter: false
                prometheus_converter_add_argocd_ignore_annotations: true
                enable_converter_ownership: true
                useCustomConfigReloader: true
            vmsingle:
              enabled: false
            vmcluster:
              enabled: true
              ingress:
                storage:
                  enabled: false
                select:
                  enabled: true
                  ingressClassName: public
                  annotations:
                    cert-manager.io/cluster-issuer: default-issuer
                    nginx.ingress.kubernetes.io/app-root: /select/0/vmui
                    nginx.ingress.kubernetes.io/auth-url: |-
                      http://authentik-server.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
                    nginx.ingress.kubernetes.io/auth-signin: |-
                      https://victoria-metrics.mareo.fr/outpost.goauthentik.io/start?rd=$escaped_request_uri
                    nginx.ingress.kubernetes.io/auth-response-headers: |-
                      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
                    nginx.ingress.kubernetes.io/auth-snippet: |
                      proxy_set_header X-Forwarded-Host $http_host;
                  hosts:
                    - victoria-metrics.mareo.fr
                  tls:
                    - secretName: victoria-metrics-tls
                      hosts:
                        - victoria-metrics.mareo.fr
                insert:
                  enabled: false
            alertmanager:
              enabled: true
              ingress:
                enabled: true
                ingressClassName: public
                annotations:
                  cert-manager.io/cluster-issuer: default-issuer
                  nginx.ingress.kubernetes.io/auth-url: |-
                      http://authentik-server.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
                  nginx.ingress.kubernetes.io/auth-signin: |-
                      https://alertmanager.mareo.fr/outpost.goauthentik.io/start?rd=$escaped_request_uri
                  nginx.ingress.kubernetes.io/auth-response-headers: |-
                      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
                  nginx.ingress.kubernetes.io/auth-snippet: |
                      proxy_set_header X-Forwarded-Host $http_host;
                paths:
                  - /
                pathType: Prefix
                hosts:
                  - alertmanager.mareo.fr
                tls:
                  - secretName: alertmanager-tls
                    hosts:
                      - alertmanager.mareo.fr
              spec:
                image:
                  tag: main  # FIXME: remove once v0.27.1 is released
                extraArgs:
                  web.external-url: "https://alertmanager.mareo.fr"
                secrets:
                  - alertmanager-discord
                  - alertmanager-gitlab
              extraVolumes:
                - name: alertmanager-discord
                  secret:
                    defaultMode: 288
                    secretName: alertmanager-discord
                - name: alertmanager-gitlab
                  secret:
                    defaultMode: 288
                    secretName: alertmanager-gitlab
                - name: alertmanager-gitlab
              config:
                route:
                  receiver: "discord_and_gitlab"
                  routes:
                    - receiver: blackhole
                      match:
                        alertname: Watchdog
                    - receiver: blackhole
                      match:
                        alertname: InfoInhibitor
                receivers:
                  - name: "blackhole"
                  - name: "discord_and_gitlab"
                    discord_configs:
                      - webhook_url_file: "/etc/vm/secrets/alertmanager-discord/webhook"
                        send_resolved: true
                    webhook_configs:
                      - http_config:
                          authorization:
                            type: Bearer
                            credentials_file: /etc/vm/secrets/alertmanager-gitlab/token
                        send_resolved: true
                        url: "https://gitlab.mareo.fr/iac/infrastructure/prometheus/alerts/notify.json"
            vmselect:
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 500m
                  memory: 250Mi
            vmalert:
              enabled: true
              spec:
                extraArgs:
                  external.url: "https://victoria-metrics.mareo.fr/select/0/prometheus"
            vmagent:
              enabled: true
              spec:
                resources:
                  limits:
                    memory: 500Mi
                  requests:
                    cpu: 500m
                    memory: 200Mi
                externalLabels:
                  cluster: local
            grafana:
              enabled: false
              sidecar:
                dashboards:
                  enabled: true
                  additionalDashboardLabels:
                    grafana_dashboard: "1"
                  additionalDashboardAnnotations:
                    k8s-sidecar-target-directory: "/tmp/dashboards/Cluster Dashboards"
            prometheus-node-exporter:
              enabled: true
            kube-state-metrics:
              enabled: true
            kubelet:
              enabled: true
              cadvisor: true
              probes: true
            kubeApiServer:
              enabled: true
            kubeControllerManager:
              enabled: true
              endpoints: {{ toJson .endpoints }}
              vmScrape:
                spec:
                  endpoints:
                    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                      port: http-metrics
                      scheme: https
                      tlsConfig:
                        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                        serverName: localhost
                        insecureSkipVerify: true
            kubeDns:
              enabled: false
            coreDns:
              enabled: true
            kubeEtcd:
              enabled: true
            kubeScheduler:
              enabled: true
              endpoints: {{ toJson .endpoints }}
              vmScrape:
                spec:
                  endpoints:
                    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                      port: http-metrics
                      scheme: https
                      tlsConfig:
                        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                        serverName: 127.0.0.1
                        insecureSkipVerify: true
            kubeProxy:
              enabled: true
              endpoints: {{ toJson .endpoints }}
              vmScrape:
                spec:
                  endpoints:
                    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                      port: http-metrics
                      scheme: http
            crds:
              enabled: true
