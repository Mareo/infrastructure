# yamllint disable rule:line-length
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: grafana-agent
  labels:
    app: grafana-agent
spec:
  generators:
    - list:
        elements:
          - name: in-cluster
  goTemplate: true
  template:
    metadata:
      name: "{{.name}}-grafana-agent"
      labels:
        app: grafana-agent
    spec:
      project: default
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        automated:
          prune: true
          selfHeal: false
      destination:
        name: "{{.name}}"
        namespace: monitoring
      source:
        repoURL: https://grafana.github.io/helm-charts
        chart: grafana-agent
        targetRevision: 0.37.0
        helm:
          values: |
            fullnameOverride: grafana-agent
            agent:
              mode: "flow"
              configMap:
                create: true
                content: |
                  discovery.kubernetes "all_pods" {
                    role = "pod"
                  }

                  discovery.relabel "all_pods" {
                    targets = discovery.kubernetes.all_pods.targets
                    rule {
                      source_labels = ["__meta_kubernetes_namespace"]
                      target_label = "namespace"
                    }
                    rule {
                      source_labels = ["__meta_kubernetes_pod_name"]
                      target_label = "pod"
                    }
                    rule {
                      source_labels = ["__meta_kubernetes_pod_container_name"]
                      target_label = "container"
                    }
                    rule {
                      source_labels = ["__meta_kubernetes_pod_controller_name"]
                      target_label = "controller"
                    }
                    rule {
                      source_labels = ["__meta_kubernetes_pod_node_name"]
                      target_label = "node"
                    }
                  }

                  loki.source.kubernetes "all_pods" {
                    targets = discovery.relabel.all_pods.targets
                    forward_to = [loki.process.all_pods.receiver]
                  }

                  loki.process "all_pods" {
                    forward_to = [loki.write.loki.receiver]
                    stage.cri {}
                  }

                  loki.write "loki" {
                    endpoint {
                      url = "http://loki-gateway.monitoring.svc/loki/api/v1/push"
                    }
                  }
              enableReporting: false
            controller:
              type: "statefulset"
              enableStatefulSetAutoDeletePVC: true
            serviceMonitor:
              enabled: true
            ingress:
              enabled: true
              ingressClassName: public
              annotations:
                cert-manager.io/cluster-issuer: default-issuer
                nginx.ingress.kubernetes.io/auth-url: |-
                  http://authentik-server.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
                nginx.ingress.kubernetes.io/auth-signin: |-
                  https://alertmanager.mareo.fr/outpost.goauthentik.io/start?rd=$escaped_request_uri
                nginx.ingress.kubernetes.io/auth-response-headers: |-
                  Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
                nginx.ingress.kubernetes.io/auth-snippet: |
                  proxy_set_header X-Forwarded-Host $http_host;
              hosts:
                - grafana-agent.mareo.fr
              tls:
                - secretName: grafana-agent-tls
                  hosts:
                    - grafana-agent.mareo.fr
