# yamllint disable rule:line-length
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kube-prometheus-stack
  labels:
    app: kube-prometheus-stack
spec:
  generators:
    - list:
        elements:
          - name: in-cluster
  template:
    metadata:
      name: "{{name}}-kube-prometheus-stack"
      labels:
        app: kube-prometheus-stack
    spec:
      project: default
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        automated:
          prune: true
      destination:
        name: "{{name}}"
        namespace: kube-prometheus-stack
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: kube-prometheus-stack
        targetRevision: 46.8.0
        helm:
          values: |
            fullnameOverride: kube-prometheus-stack
            grafana:
              admin:
                existingSecret: "grafana-admin-credentials"
                userKey: username
                passwordKey: password
              smtp:
                existingSecret: "grafana-mail"
                userKey: username
                passwordKey: password
              extraSecretMounts:
                - name: db-secret-mount
                  secretName: kube-prometheus-stack.grafana.in-cluster-main-cluster.credentials
                  defaultMode: 0440
                  mountPath: /etc/secrets/db
                  readOnly: true
                - name: auth-generic-oauth-secret-mount
                  secretName: grafana-oidc-authentik
                  defaultMode: 0440
                  mountPath: /etc/secrets/auth_generic_oauth
                  readOnly: true
              grafana.ini:
                smtp:
                  enabled: true
                  host: athena.mareo.fr:465
                  from_address: no-reply@grafana.mareo.fr
                database:
                  type: postgres
                  host: in-cluster-main-cluster.postgres.svc.cluster.local
                  name: grafana
                  user: "$__file{/etc/secrets/db/username}"
                  password: "$__file{/etc/secrets/db/password}"
                  ssl_mode: require
                server:
                  root_url: https://grafana.mareo.fr
                auth:
                  signout_redirect_url: https://auth.mareo.fr/if/session-end/grafana/
                auth.generic_oauth:
                  enabled: true
                  allow_sign_up: true
                  name: Authentik
                  client_id: "$__file{/etc/secrets/auth_generic_oauth/client_id}"
                  client_secret: "$__file{/etc/secrets/auth_generic_oauth/client_secret}"
                  scopes: openid profile email
                  auth_url: https://auth.mareo.fr/application/o/authorize/
                  token_url: https://auth.mareo.fr/application/o/token/
                  api_url: https://auth.mareo.fr/application/o/userinfo/
                  use_pkce: true
                  login_attribute_path: preferred_username
                  role_attribute_path: "contains(groups[*], 'grafana_admins') && 'Admin' || contains(groups[*], 'grafana_editors') && 'Editor' || 'Viewer'"
                  groups_attribute_path: groups
              defaultDashboardTimezone: Europe/Paris
              ingress:
                enabled: true
                ingressClassName: public
                annotations:
                  cert-manager.io/cluster-issuer: default-issuer
                hosts:
                  - grafana.mareo.fr
                tls:
                  - secretName: grafana-tls
                    hosts:
                      - grafana.mareo.fr
            alertmanager:
              ingress:
                enabled: true
                ingressClassName: public
                annotations:
                  cert-manager.io/cluster-issuer: default-issuer
                  nginx.ingress.kubernetes.io/auth-url: |-
                      http://authentik.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
                  nginx.ingress.kubernetes.io/auth-signin: |-
                      https://alertmanager.mareo.fr/outpost.goauthentik.io/start?rd=$escaped_request_uri
                  nginx.ingress.kubernetes.io/auth-response-headers: |-
                      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
                  nginx.ingress.kubernetes.io/auth-snippet: |
                      proxy_set_header X-Forwarded-Host $http_host;
                hosts:
                  - alertmanager.mareo.fr
                paths:
                  - /
                pathType: Prefix
                tls:
                  - secretName: alertmanager-tls
                    hosts:
                      - alertmanager.mareo.fr
              alertmanagerSpec:
                secrets:
                  - alertmanager-discord
              config:
                route:
                  routes:
                    - receiver: "discord"
                      matchers:
                        - alertname =~ "InfoInhibitor|Watchdog"
                receivers:
                  - name: "null"
                  - name: "discord"
                    slack_configs:
                      - channel: "#alertmanager"
                        send_resolved: true
                        api_url_file: "/etc/alertmanager/secrets/alertmanager-discord/webhook"
            prometheus:
              prometheusSpec:
                enableAdminAPI: true
                ruleSelectorNilUsesHelmValues: false
                serviceMonitorSelectorNilUsesHelmValues: false
                podMonitorSelectorNilUsesHelmValues: false
                probeSelectorNilUsesHelmValues: false
              ingress:
                enabled: true
                ingressClassName: public
                annotations:
                  cert-manager.io/cluster-issuer: default-issuer
                  nginx.ingress.kubernetes.io/auth-url: |-
                      http://authentik.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
                  nginx.ingress.kubernetes.io/auth-signin: |-
                      https://prom.mareo.fr/outpost.goauthentik.io/start?rd=$escaped_request_uri
                  nginx.ingress.kubernetes.io/auth-response-headers: |-
                      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
                  nginx.ingress.kubernetes.io/auth-snippet: |
                      proxy_set_header X-Forwarded-Host $http_host;
                hosts:
                  - prom.mareo.fr
                paths:
                  - /
                pathType: Prefix
                tls:
                  - secretName: prometheus-tls
                    hosts:
                      - prom.mareo.fr
