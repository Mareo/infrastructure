---
- name: Check whether {{ item.name }} exists
  ansible.builtin.command:
    argv:
      - qm
      - config
      - "{{ item.id }}"
  register: command_output
  failed_when: false
  changed_when: false
  check_mode: false

- name: Create {{ item.name }} template
  when: command_output.rc != 0
  block:
    - name: Download {{ item.name }} image
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ (proxmox_local_path, 'images', item.name) | path_join }}"
        mode: "0644"
      register: file

    - name: Create VM {{ item.id }}
      ansible.builtin.command:
        argv:
          - qm
          - create
          - "{{ item.id }}"
          - --boot
          - order=scsi0
          - --name
          - "{{ item.name }}"
          - --scsihw
          - virtio-scsi-pci
          - --serial0
          - socket
          - --vga
          - type=serial0
      changed_when: true

    - name: Import {{ item.name }} disk
      ansible.builtin.command:
        argv:
          - qm
          - importdisk
          - "{{ item.id }}"
          - "{{ file.dest }}"
          - "{{ item.storage | default(proxmox_template_default_storage) }}"
      register: importdisk_result
      changed_when: true

    - name: Parse disk path
      ansible.builtin.set_fact:
        disk_path: "{{ importdisk_result.stdout_lines[-1] | regex_search('unused[0-9]:(.*:.*).$', '\\1') | first }}"

    - name: Attach {{ disk_path }} disk to {{ item.name }} template
      ansible.builtin.command:
        argv:
          - qm
          - set
          - "{{ item.id }}"
          - --scsi0
          - "{{ disk_path }}"
      changed_when: true

    - name: Convert {{ item.name }} to template
      ansible.builtin.command:
        argv:
          - qm
          - template
          - "{{ item.id }}"
      changed_when: true
