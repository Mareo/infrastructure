---
nft_enabled: true
nft_old_pkg_manage: false
nft__forward_table_manage: true
nft__nat_table_manage: true

nft_input_group_rules:
  100 proxomx:
    - tcp dport 8006 accept  # web interface
    - tcp dport 5900-5999 accept  # VNC Web console
    - tcp dport 3128  # SPICE proxy
    - udp dport {5404,5405}  # corosync cluster traffic
    - tcp dport 60000-60050  # live migration
  101 ceph:
    - ip daddr $ceph_addr ip saddr $rfc1918 tcp dport $ceph_ports accept
    - tcp dport {7480, 7443} accept  # rgw
    - tcp dport 8443 accept  # dashboard

nft_define:
  rfc1918:
    name: rfc1918
    value: "{ 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 }"
  ceph_addr:
    name: ceph_addr
    value: "{{ proxmox_ceph_address | ansible.utils.ipaddr('address') }}"
  ceph_ports:
    name: ceph_ports
    value: "{ 3300, 6789, 6800-7300 }"

nft_forward_rules:
  100 internal vms:
    - ip saddr $rfc1918 accept
    - ip protocol icmp accept

nft__nat_postrouting_rules:
  900 masquerade:
    - ip daddr != $rfc1918 ip saddr $rfc1918 masquerade
  910 hairpin:
    - ip daddr $rfc1918 ip saddr $rfc1918 masquerade

proxmox_ceph_address: 172.31.0.254/24
proxmox_network_bridges:
  - name: vmbr0
    addresses:
      - 192.168.0.254/24

proxmox_ceph_rgw_users:
  - uid: terraform
    display_name: terraform
    max_buckets: 1
    buckets:
      - terraform
  - uid: argo-workflows
    display_name: argo-workflows
    max_buckets: 1
    buckets:
      - argo-workflows
  - uid: gitlab
    display_name: gitlab
    max_buckets: 12
    buckets:
      - gitlab-artifacts
      - gitlab-backups
      - gitlab-dependency-proxy
      - gitlab-external-diffs
      - gitlab-lfs-objects
      - gitlab-packages
      - gitlab-pages
      - gitlab-registry
      - gitlab-runner-cache
      - gitlab-terraform-state
      - gitlab-tmp-storage
      - gitlab-uploads
  - uid: hedgedoc
    display_name: hedgedoc
    max_buckets: 1
    buckets:
      - hedgedoc-data
  - uid: loki
    display_name: loki
    max_buckets: 1
    buckets:
      - loki
  - uid: petitstream
    display_name: petitstream
    max_buckets: 2
    buckets:
      - petitstream-dev
      - petitstream
  - uid: postgresql
    display_name: postgresql
    max_buckets: 1
    buckets:
      - postgresql

dhcp_subnets: "{{ dhcp_subnets_yaml | from_yaml }}"
dhcp_interfaces: "{{ dhcp_interfaces_yaml | from_yaml | join(' ') }}"

dhcp_interfaces_yaml: |
  {% for br in proxmox_network_bridges %}
  {% if br.addresses | ansible.utils.ipv4 %}
  - {{ br.name }}
  {% endif %}
  {% endfor %}

# yamllint disable rule:line-length
dhcp_subnets_yaml: |
  {% for br in proxmox_network_bridges %}
  {% if br.addresses | ansible.utils.ipv4 %}
  - ip: {{ br.addresses | ansible.utils.ipv4 | first | ansible.utils.ipaddr('network') }}
    interface: {{ br.name }}
    routers: {{ br.addresses | ansible.utils.ipv4 | first | ansible.utils.ipaddr('address') }}
    netmask: {{ br.addresses | ansible.utils.ipv4 | first | ansible.utils.ipaddr('netmask') }}
    range_begin: {{ br.addresses | ansible.utils.ipv4 | first | ansible.utils.ipaddr('64') | ansible.utils.ipaddr('address') }}
    range_end: {{ br.addresses | ansible.utils.ipv4 | first | ansible.utils.ipaddr('-32') | ansible.utils.ipaddr('address') }}
  {% endif %}
  {% endfor %}
# yamllint enable rule:line-length
