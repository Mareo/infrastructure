---

nft_enabled: true
nft_old_pkg_manage: false
nft__forward_table_manage: true
nft__nat_table_manage: true

nft_input_group_rules:
  "100 proxomx":
    - tcp dport 8006 accept  # web interface
    - tcp dport 5900-5999 accept  # VNC Web console
    - tcp dport 3128  # SPICE proxy
    - udp dport {5404,5405}  # corosync cluster traffic
    - tcp dport 60000-60050  # live migration

nft_define:
  rfc1918:
    name: rfc1918
    value: '{ 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 }'

nft_forward_rules:
  "100 internal vms":
    - ip saddr $rfc1918 accept
    - ip protocol icmp accept

nft__nat_postrouting_rules:
  "900 masquerade":
    - ip daddr != $rfc1918 ip saddr $rfc1918 masquerade
  "910 hairpin":
    - ip daddr $rfc1918 ip saddr $rfc1918 masquerade

proxmox_network_bridges:
  - name: vmbr0
    addresses:
      - 192.168.0.254/24

dhcp_subnets: "{{ dhcp_subnets_yaml|from_yaml }}"
dhcp_interfaces: "{{ dhcp_interfaces_yaml|from_yaml|join(' ') }}"

dhcp_interfaces_yaml: |
  {% for br in proxmox_network_bridges %}
  {% if br.addresses|ansible.utils.ipv4 %}
  - {{ br.name }}
  {% endif %}
  {% endfor %}

# yamllint disable rule:line-length
dhcp_subnets_yaml: |
  {% for br in proxmox_network_bridges %}
  {% if br.addresses|ansible.utils.ipv4 %}
  - ip: {{ br.addresses|ansible.utils.ipv4|first|ansible.utils.ipaddr('network') }}
    interface: {{ br.name }}
    routers: {{ br.addresses|ansible.utils.ipv4|first|ansible.utils.ipaddr('address') }}
    netmask: {{ br.addresses|ansible.utils.ipv4|first|ansible.utils.ipaddr('netmask') }}
    range_begin: {{ br.addresses|ansible.utils.ipv4|first|ansible.utils.ipaddr('64')|ansible.utils.ipaddr('address') }}
    range_end: {{ br.addresses|ansible.utils.ipv4|first|ansible.utils.ipaddr('-32')|ansible.utils.ipaddr('address') }}
  {% endif %}
  {% endfor %}
# yamllint enable rule:line-length

dhcp_hosts:
  - name: k3s-1.vm.athena.mareo.fr
    hostname: k3s-1.vm.athena.mareo.fr
    mac: 0e:a6:7d:72:7e:01
    ip: 192.168.0.1
